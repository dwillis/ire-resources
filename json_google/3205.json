```json
{
  "id": 3205,
  "authors": [
    {
      "name": "Paul Overberg",
      "email": "poverberg@usatoday.com",
      "affiliation": "USA TODAY"
    }
  ],
  "conference": "NICAR",
  "year": "2009",
  "title": "Finding and Downloading Data Online",
  "description": "This lesson is mostly about downloading, not finding. How to find data is a part of how to search, a subject about which entire books have been written. Just a couple quick favorites: -- Google search using the “filetype:” operator, somewhat like this: filetype:xls site:nj.gov/transportation You can use any common data file type – csv, dat, txt. This is a good way to poke around in the closets of your favorite government agency for data that has just been left lying around. Yes, it’s legal! -- Look at where data enters a government agency – the forms people fill out, either on paper or online. Every blank or conbination of blanks is fodder for analysis if you can get the data. Pet license example: Spayed dogs by neighborhood by breed? -- The same applies at the other end -- look at data that comes out of the agency. Often, it’s summary statistics in an annual report, especially if they make the agency look good, like a rising caseload. But what about caseload per staffer? How you actually download data depends on how much data you need and its form. Opening a web page in Excel If it’s a single table that takes up most of a simple web page, you can just open the file in Excel. This web page from the Bureau of Justice Statistics is a good example. Its structure betrays regular HTML coding that Excel can digest easily. Just copy the web page address from your browser to the clipboard. Then, in Excel, choose File|Open, paste the address into the box called “File Name” and hit “Enter.” (Do it often enough and you’ll learn the keyboard sequence: Control-C, Control-O, Control-V, Enter) Excel, recognizing a web address, passes it to the browser and says, “Hey, go get this file for me.” When the file arrives, Excel looks for the table coding and slices it up. Here’s the result in Excel: From this point, it’s simple to copy the data to another worksheet. Sometimes you will need to work a little harder by stripping the rest of the page elements away from the data. This also works for plain old text files stored as web pages. Their addresses often end in “*.csv” or “*txt.” Like this: http://www.census.gov/popest/metro/files/2007/CBSA-EST2007-alldata.csv. Here is what Excel does with it: You can always download files like this and use Excel to find and open them. When you do, a *csv usually opens immediately but a *.txt.file triggers Excel’s Text Import wizard, which gives you more control – such as column skipping and formatting (see below). If you want or need all the data, however, simply spooning the web address into Excel’s File|Open mouth is usually faster and neater. Excel web query Often, a web page is much more complicated. It’s a mix of text, graphics, and lots of little tables – and you only need one of them. In cases like this, it’s a good idea to learn how to use Excel’s built-in web query tool. With an Excel file open, go to Data|Import External Data|New Web Query. That opens a browser window within Excel. Paste into that browser’s address bar the address of the page that holds the data you want. In the example below, I’ve loaded a page from the U.S. Senate’s Office of Public Records. You can see that the browser window is marking the upper left corner of the tables coded into this web page with little yellow arrows. Clicking on one of the arrows turns it green and tells Excel the range of the data you’d like to grab. Then just click on the “Import” button. Excel loads the table, often perfectly. In this case, it parsed some of the table coding as interlaced “gray line” rows between the actual rows of data. This is easy to dump by sorting and deleting. This isn’t just any old Excel worksheet. Excel has stored the basic instructions for where to go and what to grab. Right-click anywhere on the data and you’ll get a pop-up menu that lets you set several options, including naming and storing what you just did for reuse. This is handy if you have to import something
