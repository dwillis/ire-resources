NICAR 2007 Conference

Speaking the Same Language: Data Handling Between
the Newsroom and the Website
Derek Willis, washingtonpost.com

You don’t have to know Apache administration or CSS to ensure that your website takes
full advantage of your CAR work. Even if you have a completely separate web staff
there are things you can do to bring both sides closer together. Here are some of the
lessons I’ve learned working on both ends.
• Avoid the middleman (part 1). Learn what you can about who handles data at the site
and try to deal with that person when it comes to your work. Don’t let a layer come between you.
• Avoid the middleman (part 2). Don’t send files back and forth; send data. Even different database servers can talk to each other via scripting languages or other tools. At
The Post, researchers maintain our database of war casualties in SQL Server. The
website uses Postgres and has a Python script that retrieves the data from the newsroom. Relying on email to send data assumes that the recipient will always be there.
• Text is your friend. Good ol’ ASCII text sometimes is the only common link between a
database server and a web server. It helps make lots of web apps, including
Javascript-driven maps. When in doubt, text is a good choice.
• Consider automation. CAR and the Web sometimes have different needs - you may
only want to get a dataset once, but the Web might want it every week. Think about
ways to automate the process and you’ll save yourself work and likely gain some admirers on the web side. Programs like Curl, wget and scripting languages like Perl, Python and PHP can help automate tasks.
• If you develop your intranet, consider using the same tools as the web staff uses for
production. That way you’ll learn more about how the web staff works but also be able
to quickly transition data from inside to outside.
• Upgrade from Access. If you mainly use Access to handle database tasks, consider
the web a reason to move to something more robust. Very few web database applications run on Access, especially if your web site runs on Linux or Unix servers.
Finally, have a toolkit you can rely on. It really doesn’t matter whether that’s a scripting
language (which one doesn’t matter much, either) or shell scripting or SAS. Spreadsheets and database managers alone will limit your ability to contribute to your web efforts, and limit your influence over them as well. Being able to manipulate data no matter where it is should be your goal.

A copy of this handout is available at http://www.forjournalists.com/cookbook/ or email dwillis@gmail.com.

