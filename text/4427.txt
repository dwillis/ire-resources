NICAR	  2015	  ✪ Twitter	  Bootstrap	  
Responsive,	  mobile-­‐first	  HTML,	  CSS,	  JS	  framework	  
NICAR 2015 • March 7th • 2:10PM - 3:10PM
http://slides.com/ebigalee/nicar-2015-bootstrap
	  

	  
One	  of	  the	  most	  supported,	  popular	  and	  feature-­‐filled	  ways	  to	  get	  started	  building	  a	  website	  
is	  to	  use	  Twitter	  Bootstrap.	  Bootstrap	  is	  a	  responsive,	  mobile-­‐first	  HTML,	  CSS,	  &	  JS	  
framework.	  Do	  you	  know	  what	  those	  three	  terms	  mean?	  

	  

è What	  you	  will	  need	  today:	  

	  

v Open	  a	  browser	  –	  Chrome	  or	  Firefox	  for	  today	  please.	  
v A	  text	  editor	  of	  your	  choice:	  
o Text	  Wrangler	  (free)	  
o SublimeText2	  or	  SublimeText3	  (free	  trial)	  
o Brackets	  (free)	  

	  

I.	  Get	  Started	  

Gather	  Bootstrap	  3	  resources	  for	  a	  project.	  	  
v http://getbootstrap.com/	  
	  
Decide	  either	  to	  (1)	  include	  the	  CDN	  links	  in	  your	  project	  OR	  (2)	  download	  Bootstrap.	  
	  

Bootstrap’s	  three	  download	  options:	  
	  
v If	  you	  need	  a	  basic	  structure	  and	  you	  ARE	  NOT	  already	  using	  a	  compiler	  –	  choose	  
the	  first	  option	  “Bootstrap”	  
v If	  terms	  like	  SASS,	  Grunt,	  Gulp,	  Bower,	  Yeoman,	  Compass	  means	  something	  to	  you,	  
then	  the	  more	  customizable	  option	  is	  to	  use	  either	  “Source	  Code,”	  which	  uses	  LESS,	  
or	  “Sass,”	  which	  is	  a	  port	  using	  SASS/SCSS.	  	  
	  
è Today	  we’re	  going	  to	  choose	  the	  first	  option	  “Bootstrap.”	  

If	  you	  have	  trouble	  downloading,	  please	  let	  me	  know.	  We	  can	  also	  use	  the	  CDN	  without	  much	  trouble.	  

	  

•
•
•
•

On	  http://getbootstrap.com/getting-­‐started/,	  choose	  the	  “Bootstrap”	  option.	  
Unzip	  the	  downloaded	  file.	  
Move	  the	  Bootstrap	  folder	  (ex.	  bootstrap-­‐3.3.2-­‐dist)	  outside	  of	  Downloads.	  
Rename	  the	  folder	  “Bootstrap_NICAR_2015”	  or	  a	  name	  of	  your	  choice.	  

	  
NOTE:	  You	  can	  also	  choose	  to	  drop	  the	  Bootstrap	  files	  and	  folders	  into	  a	  current	  project,	  but	  
today	  we’re	  going	  to	  use	  Bootstrap	  as	  our	  starter	  folder	  for	  a	  project.	  
	  

II.	  Set	  up	  a	  Project	  
Use	  Bootstrap	  to	  set	  up	  a	  basic	  website	  structure.	  
	  
Using	  Bootstrap	  as	  your	  project	  folder:	  

We’ll	  need	  to	  add	  a	  few	  more	  pieces	  so	  we	  can	  start	  working	  on	  our	  new	  website:	  
	  
• In	  the	  Finder,	  add	  an	  images	  folder	  	  u
• Add	  a	  blank	  page	  called	  index.html	  	  v	  
• Add	  a	  blank	  page	  called	  styles.css	  file	  into	  the	  css	  folder	  w	  
• Open	  index.html	  and	  styles.css	  in	  your	  text	  editor	  
• Open	  index.html	  in	  your	  browser	  so	  we	  can	  see	  our	  site	  
	  

w	  
u
v
	  
	  

	  

1.	  Paste	  in	  Bootstrap’s	  basic	  HTML	  template	  in	  index.html	  
	  
• http://getbootstrap.com/getting-­‐started/#template	  
	  
Notice	  that	  Bootstrap’s	  styles	  (CSS	  &	  Components)	  are	  linked	  in	  to	  our	  new	  page	  within	  the	  
<head>,	  and	  that	  Bootstrap’s	  jQuery	  plugins	  	  (JavaScript)	  are	  linked	  in	  at	  the	  very	  bottom	  
of	  <body>.	  We’re	  also	  given	  a	  CDN	  to	  connect	  to	  a	  recent	  version	  of	  jQuery,	  which	  is	  
required	  for	  the	  JS	  (functional)	  portions	  to	  work.	  

2.	  Link	  styles.css	  to	  index.html	  
We	  will	  need	  our	  own	  stylesheet	  to	  add	  our	  own	  custom	  styles	  to	  the	  website.	  
<link href="css/styles.css" rel="stylesheet">	  

	  
Place	  this	  resource	  beneath	  the	  <link>to	  our	  Bootstrap	  styles	  in	  the	  <head> —	  needs	  to	  
underneath	  the	  link	  for	  Bootstrap’s	  CSS	  because	  we	  might	  want	  to	  override	  those	  styles.	  

3.	  Paste	  in	  default	  Bootstrap	  media	  queries	  
http://getbootstrap.com/css/#grid-­‐media-­‐queries	  

•

	  

/* Extra small devices (phones, less than 768px) */
/* No media query since this is the default in Bootstrap */
/* Most of your styles will be underneath this comment but before
‘Small devices’ */
/* Small devices (tablets, 768px and up) */
@media (min-width: @screen-sm-min) { ... }
/* Medium devices (desktops, 992px and up) */
@media (min-width: @screen-md-min) { ... }
/* Large devices (large desktops, 1200px and up) */
@media (min-width: @screen-lg-min) { ... }
	  

	  
We	  are	  using	  the	  vanilla	  version	  of	  Bootstrap	  with	  CSS.	  This	  means	  we	  need	  to	  take	  the	  
variables	  in	  this	  example	  and	  set	  them	  to	  pixel	  widths.	  	  We	  also	  want	  to	  remove	  the	  dot-­‐dot-­‐
dot,	  which	  indicates	  we	  should	  put	  our	  styles	  between	  the	  curly	  brackets.	  
/* Small devices (tablets, 768px and up) */
@media (min-width: 768px) {
}
/* Medium devices (desktops, 992px and up) */
@media (min-width: 992px) {
}
/* Large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
}
	  

	  

III.	  Using	  Bootstrap’s	  predefined	  classes	  
Use	  Bootstrap’s	  styles	  and	  components	  to	  build	  your	  site.	  
	  
1.	  Set	  up	  a	  container	  with	  rows	  and	  columns	  
Nearly	  required	  is	  < div class="container"> ,	  but	  the	  rows	  and	  columns	  are	  optional.	  
Only	  use	  them	  when	  you	  want	  to	  or	  need	  to.	  You	  CANNOT	  have	  columns	  if	  you	  have	  not	  set	  
a	  row	  first.	  
	  

Basics	  
•
•
	  

Twelve	  columns	  in	  each	  row,	  even	  if	  it’s	  a	  row	  inside	  of	  a	  row.	  
Choice	  of	  container	  type	  (responsive	  columns	  won’t	  work	  without	  this	  set):	  
o .container	  –	  wrapper	  that	  automatically	  sucks	  in	  content	  
o .container-­‐fluid	  –	  wrapper	  that	  doesn’t	  suck	  in	  content	  

HTML	  
<body>
<d iv c la ss ="co nt ai ne r ">
<h1>NICAR 2015: Bootstrap</h1>
<p class="lead">Basic columns in Bootstrap</p>
<d iv c la ss ="ro w ">
<d iv c la ss ="co l -md - 4">
/* c on te nt * /
</ di v>
<d iv c la ss ="co l -md - 8">
/* c on te nt * /
</ di v>
</ di v> <! -- .r ow -- >
</ di v> <! -- .c on ta in er -- >
<script>…</script>
</body>
	  

	  
Special	  classes	  
	  
•

	  

	  
	  
	  
	  
	  

.lead	  	  
Example	  usage:	  <p class="lead"></p>	  
Best	  use	  is	  for	  a	  tagline	  because	  it	  automatically	  makes	  the	  font-­‐size	  larger	  or	  
smaller	  as	  the	  page	  is	  resized	  

è Add	  content	  and	  styling	  so	  we	  can	  see	  our	  grid.	  
Let’s	  add	  some	  styling	  and	  content	  so	  we	  can	  see	  that	  our	  grid	  system	  is	  working.	  
v Add	  in	  text	  to	  fill	  up	  our	  columns	  for	  today	  -­‐	  http://www.cupcakeipsum.com/	  
v Mark	  up	  this	  content	  with	  HTML	  using	  some	  of	  the	  tags	  using	  Bootstrap’s	  
typography	  styling:	  http://getbootstrap.com/css/#type	  
	  
HTML:
…
<di v cl as s= "co l -md - 4 hi ro ">
/* c on te nt * /
</ di v>
<di v cl as s= "co l -md - 8 ba ym ax ">
/* c on te nt * /
</ di v>
…

CS S:
.hiro {
background-color: #ccc;
}
.baymax {
background-color: #666;
}

	  

	  
2.	  Add	  in	  content	  and	  mark-­‐up	  using	  pre-­‐defined	  styles	  
	  
Bootstrap	  provides	  default	  styling	  for	  essential	  typography,	  tables,	  forms,	  buttons	  and	  
images.	  Look	  through	  the	  documentation	  for	  examples.	  
	  
Let’s	  add	  a	  button:	  
<button class="btn btn-default" type="submit">Button</button>
	  

	  
Use	  any	  of	  the	  predefined	  styles	  to	  change	  what	  your	  button	  looks	  like:	  
	  
v http://getbootstrap.com/css/#buttons-­‐options	  
	  

	  

3.	  Add	  navigation	  
Navigation	  can	  be	  added	  on	  your	  own,	  or	  you	  can	  make	  use	  of	  the	  various	  ways	  Bootstrap	  
provides,	  such	  as	  dropdowns,	  button	  dropdown,	  tabs,	  “pills”	  or	  a	  pre-­‐styled	  navbar.	  
	  
• http://getbootstrap.com/examples/starter-­‐template/	  	  
An	  example	  of	  a	  basic	  fixed	  navigation	  can	  be	  found	  in	  the	  starter	  template.	  	  
• http://getbootstrap.com/components/#navbar	  
More	  complex	  navbar	  and	  other	  nav	  options	  can	  be	  found	  in	  the	  documentation.	  

	  
Basic	  navbar	  options	  include:	  	  
	  
.navbar-­‐fixed-­‐top	  
Fixes	  the	  navbar	  menu	  to	  the	  top	  of	  the	  screen.	  
	  
.navbar-­‐inverse	  
Styles	  the	  default	  navbar	  with	  dark	  colors.	  
	  
.navbar-­‐default	  	  
Styles	  the	  default	  navbar	  with	  light	  colors.	  
è Set	  a	  different	  page	  to	  be	  active:	  
Let’s	  simplify	  our	  navigation	  so	  we	  get	  a	  feel	  for	  what	  the	  Bootstrap	  navbar	  includes:	  
	  
1. Inside	  the	  <nav>	  code,	  get	  rid	  of:	  
a. <form>	  
b. <ul	  class="nav	  navbar-­‐nav	  navbar-­‐right">	  	  
c. and	  INSIDE	  <ul	  class="nav	  navbar-­‐nav">,	  remove	  <li	  class="dropdown">.	  
	  
2. Inside	  <ul	  class="nav	  navbar-­‐nav">,	  add	  in	  3-­‐4	  new	  <li><a	  href="#">Link</a></li>	  
3. Change	  which	  link	  as	  class=”active”	  added	  to	  the	  <li>	  and	  reload.	  

	  

	  

4.	  Make	  an	  embedded	  object	  work	  in	  your	  responsive	  grid	  
If	  you’re	  embedding	  a	  video	  or	  other	  content,	  it	  will	  usually	  come	  in	  an	  <iframe>,	  <embed>,	  
<video>	  or	  <object>	  tag.	  By	  default	  these	  tags	  usually	  provide	  a	  set	  width	  and	  height	  for	  
their	  content,	  which	  doesn’t	  work	  so	  well	  with	  our	  responsive	  grid	  system.	  
è 	  Replace	  dot-­‐dot-­‐dot	  with	  a	  URL,	  but	  MINUS	  the	  “http:”	  
	  
<!-- 16:9 aspect ratio -->
<div class="embed-responsive embed-responsive-16by9">
<iframe class="embed-responsive-item" src="..."></iframe>
</div>
<!-- 4:3 aspect ratio -->
<div class="embed-responsive embed-responsive-4by3">
<iframe class="embed-responsive-item" src="..."></iframe>
</div>

Note:	  you	  have	  to	  have	  a	  webserver	  running	  for	  this	  to	  work.	  
	  
On a Mac
TERMINAL:
> Navigate to just inside your website folder.
> python -m SimpleHTTPServer 8000	  
BROWSER:
> Open http://localhost:8000/

	  
	  

	  
IV.	  Using	  Bootstrap’s	  jQuery	  Plugins	  
Use	  Bootstrap’s	  styles	  and	  components	  to	  build	  your	  site.	  
	  
1.	  Overview	  of	  less	  obvious	  plugins	  
	  
v Modal	  
Darkens	  site	  and	  pops	  up	  extra	  content	  in	  a	  window.	  	  
	  
v Scrollspy	  
Used	  to	  change	  the	  highlight	  (active	  link)	  in	  the	  navbar	  on	  scroll.	  	  
Especially	  useful	  for	  long	  scrolling	  sites	  with	  multiple	  sections.	  
	  
v Popover	  
Fancy	  tooltip	  that	  appears	  on	  click.	  Looks	  more	  like	  a	  comic	  book	  text	  blurb.	  
	  
v Carousel	  
A	  basic	  slideshow.	  
	  
v Affix	  
Sets	  content	  to	  “stick”	  to	  a	  location	  or	  “unstick”	  and	  scroll	  with	  the	  page.	  	  
Especially	  useful	  for	  fixing	  and	  unfixing	  the	  navigation	  on	  scroll.	  
	  
	  
è If	  we	  have	  time…	  insert	  a	  modal:	  

	  
1. Copy	  in	  the	  code	  from	  the	  Live	  Demo	  section	  of:	  
http://getbootstrap.com/javascript/#modals	  
	  
2. Add	  some	  content	  into	  our	  modal	  header,	  body	  and	  footer.	  
	  
3. To	  our	  <button>,	  add	  data-toggle="modal" data-target="#myModal"	  
	  

