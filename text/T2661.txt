C.A.R. SURVIVAL VOCABULARY!
“Deciphering the Alphabet Soup: ASP, PHP, VB, SQL. A Pre-Primer for the Network Newbie”
March 10, 2006
Joshua Tanzer (freelance, New York Post, former programmer for BusinessWeek.com)
Joshua@tanzer.com

Internet-related terms
HTML
HTML (hypertext markup language) is a kind of formatting that turns a text file into a web page.
When you look at a page on the Internet, there is actually an underlying text file -- basically a
plain old word-processing document -- that tells the browser what the page should look like. You
can see the actual HTML document by choosing "View Source" from the browser's menu.
HTML statements sit inside "tags" which tell the browser what the text or other elements should
look like and where they go on the page. One of the simplest ones looks like this:
<B>This text will look bold on the web page.</B> This will not.

Everything between <B> and </B> comes out bold on the web page.
Javascript
Javascript is a programming (or "scripting") language that is mainly used in web pages. Here's
the conceptual difference between HTML and Javascript: First, HTML gives you a page that sits
there and doesn't change. Then, Javascript makes things on that page change, pop up, and
move around. For example, when you move your mouse over a button and it changes color,
that's because of Javascript.
Is Javascript the same as Java? No. Let's not get into what Java is. You probably won't hear
about it during the conference.
Server
A server is just a computer, almost the same as the one on your desktop, with a hard disk and
an Internet connection. A web page is just an HTML text file sitting on that server’s hard disk,
waiting for you to request it. When you request a web page, your request goes to the correct
server somewhere in the world, and the server sends back the HTML, which your browser turns
into a web page.
Apache / IIS
Sometimes when somebody mentions a "server," it refers not to the machine but to the software
on the machine that actually takes your requests and sends out your files. The most common
server in the world is Apache, which is open-source (see below). The server on Windows
machines is called IIS.

Programming languages
You'll hear about a variety of programming languages during this conference. In general they
are used for either of two purposes: 1. Crunching data. 2. Producing interactive web pages.
Different people at this conference will espouse specific programming languages. Which one
should you choose to learn and use?
Actually, any of the languages can do any job you have in mind, but some are more suitable for
specific purposes than others. So it partly depends on what you're trying to do.
1. Crunching data: Perl is probably the best choice for grabbing data off the Internet, analyzing
a text file, or automating routine computer tasks. (Some people also like Python for this
purpose. Google uses it.)
2. Making interactive web pages: Here's the idea. You go to Amazon, type in "Stephen King,"
click a button, and it gives you a list of Stephen King books. They don’t have a page prepared
for that purpose. Instead, somebody created a program that works in the background to figure
out what you're asking for and make an individualized web page that gives it to you. Same for
Google or Travelocity or IMDB or many other sites.
Which language should you use for this purpose? PHP is a great choice -- it's a close cousin of
Perl, but it's better suited to interactive web pages. ASP is the Microsoft technology for this
purpose. Technically, ASP is not a "language" – it’s more of an umbrella concept. The language
usually used within ASP is actually VBscript, aka Visual Basic. (If, like me, you don't enjoy
using VB, you can also use a form of Javascript or Perl in ASP pages.) There are also sites that
use Perl, Python, Cold Fusion, JSP, and others.
What about other languages you've heard of, such as Java, C, C++, and so on? Those can also
be used for the kinds of purposes above, but it isn't too common. Those languages are more
often used for software development.
Databases
A database is basically a piece of software that stores information in an organized way. If you
know how to use Excel, that's almost like a database. Data in a database is kept in "tables." A
simple table could look like this:
ID
-1
2
3
4
5

Firstname
--------George
Richard
Condoleezza
Tommy
Jon

Lastname
-------Bush
Cheney
Rice
Franks
Corzine

Title
----President
Vice president
Secretary of state
General
Governor

SQL
SQL (Structured Query Language) is the easiest language in the computer world. You should
learn it. (I once saw a book called "Learn SQL in 10 Minutes," which is only slightly
overoptimistic.) What SQL does is simply this: It tells your database what you want.

There are four things you might want to tell a database to do: 1. Give you some information. 2.
Save some new information. 3. Update the existing information. 4. Delete some information.
That’s what SQL is for.
Here's a basic query that you would use to get some information from the database above:
SELECT Firstname, Lastname FROM peopletable WHERE Title = 'President'

How does that query get to the database? Suppose you have programmed a page in PHP. Your
program sends a message to the database and the database sends back the data. Then your
PHP program receives the data and outputs it to the user.
MySQL / SQL Server
There are many databases, but they all work roughly the same way and you will usually hear
about two: MySQL and SQL Server. MySQL is a free "open-source" database, while SQL
Server is a Microsoft product. You can mix and match technologies pretty freely, but typically
these combinations go together.
Operating system Script language
Database
---------------- ----------------------Microsoft world:
Windows
ASP/VB
SQL Server
Open-source world: Linux
PHP, Perl etc.
MySQL
Macintosh world:
Options similar to open-source world.

Cost
----A lot
Free

SPSS / SAS
These are databases that are more commonly used for research, not for web applications.
Journalists sometimes use them, but MySQL and SQL Server will do pretty much the same and
more.
Miscellaneous
Open source
"Open source" software means essentially free software. The reason it's called "open source" is
because the actual code is open to programmers all over the world to work on collectively. (The
alternative is Microsoft, which keeps its software proprietary and charges money for it.) Different
people have different allegiances, but in my experience, programmers tend to prefer opensource by a large margin. Some Latin American countries have converted their government
systems to open source because of the cost savings.
What differences will you find between the two?
If you choose Microsoft software, and there's a problem, you can call Microsoft for answers. If
you use open-source software (e.g. Linux) and there's a problem, there's no central company to
call.
However, open-source software tends to be more stable; since it was developed by a huge
worldwide geek community, any problems were probably identified and fixed years ago by some
teenage genius in Moosejaw or Minsk.
In practice, if you have a programming question in VB, it takes a long time to find the correct
support page on Microsoft.com, and when you do, it’s almost incomprehensible. By contrast, if

you’re using PHP, it’s easy to find the appropriate page on PHP.net, and the explanation is
clear, with examples and user comments.
Microsoft’s SQL Server has a lot of good ways of automating database tasks. MySQL has less,
but that huge force of volunteer developers is creating new tools for it all the time.
Apple converted its operating system to something similar to Linux when it created OS X.
Regular expressions
Regular expressions are a super-powerful form of search and replace.
Say you want to go through a list of names and find everybody named John -- but you know
some of them go by "Jon" and others go by "Jonathan." Instead of searching for "John," you
search for a regular expression that looks like this:
Joh?n(athan)?
The question mark has a special meaning in regular expressions -- it means "this word is a
match whether the item before the question mark is there or not." The parentheses mean “treat
this bunch of letters as one unit, not separate letters.” There are a lot more special characters in
regular expressions, which is a whole subject to itself.
Regular expressions grew out of Perl and are easiest to use in Perl. They're pretty easy to use
in PHP. They work in Javascript, but inconsistently. They are a big pain, but available, in VB.
PDF
You have probably viewed PDFs from the Internet. They are basically the printer-ready form of
many different types of documents. There is software out there that reverses the process and
converts a PDF back to text and images. That might be mentioned in some sessions.
Web scraping
Web scraping is a pretty advanced subject in CAR. It means using your computer to grab data
off the Internet and save it. In a typical example, you might know where to find property
assessments for your town on the Internet, but if there are 20,000 properties, it will take forever
for you to find and save all those assessments. But a computer can do this kind of repetitive
work easily. What you need to do is write a script (probably in Perl) that calls up each of the
20,000 web pages, gets the important data from each page, and saves it all in a database or a
text file.
This illustrates a basic principle of programming: If you find yourself doing the same task over
and over again, it’s probably time to write a computer program that will do it for you.
If you attend a session on web scraping and you don't know programming pretty well, you will
probably get the general concepts but not the specific programming details. Apparently, some
web-scraping-for-dummies products are now being developed to help you do web scraping
without being a Perl genius.

