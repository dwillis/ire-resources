Basic Introduction
Objectives
•
•
•

Learn basic ArcView terms
Understand hierarchy of ArcView data storage
Learn how to organize work into Projects containing Views, Tables, and Scripts

Here are the basics you need to know when dealing with ArcView. This will introduce
you to the terminology used in this program and help you understand how you can
arrange your work when going through the lessons that will follow. You might want to
refer to this handout when working through the ArcView lessons.
Interface
For the computer literate, this section is probably too basic, but it still might be helpful.
ArcView’s interface consists of three categories: menus, buttons, and tools. These are
found at the top on the first, second, and third lines, respectively. The menus are
pulldowns and allow for a variety of functions, some of which can also be found in the
buttons. The button bar (the second line) consists of buttons which, when clicked,
perform some task, such as adding tabular datasets, etc. The tools do not automatically
perform their function when clicked, but instead require some additional action with the
cursor, such as panning across a map or identifying a feature by clicking on it. It is
possible to change all of these interface bars using customization techniques in Avenue,
ArcView’s object-oriented programming language. Avenue will be discussed later.
Projects
When you first open up ArcView, you get an empty window known as your project
window. From here, you can start a new project or open a previously saved one. Projects
are the top of the hierarchy, and are collections of related maps, tables, charts, etc. Think
of them as folders for organizing your various works. The initial project window has a
set of icons corresponding to the type of element you want to employ.

To open up a previously saved project, go up to the menu bar and select File…Open
Project. Otherwise, when you are finished working in the current Untitled project, choose
File… Save As. Projects are, by convention, always given a .apr suffix.
The icons themselves represent five types of data categories. You can customize
ArcView to reflect different categories, but these defaults should be adequate.
Views
Views are windows where your spatial data is graphically represented. This is where you
will do most of your work. To open a new, empty view, double click on the Views icon.
In a project that already contains saved work, a list of available views will automatically
be displayed in the text area next to the icons when the Views icon is selected. This is
also the case for the other icons, so for example if you click once on scripts, you will get a
list of the available scripts for the project.
Tables
Tables are basically self-explanatory. ArcView stores data tables in dBase format, so
they can be manipulated in various programs such as FoxPro before being incorporated
into ArcView. You will see why this is helpful in the lessons to follow. In ArcView,
these tables can be spatially referenced and turned into entities which can be mapped and
analyzed graphically. Again, you will learn how to do this later.
Charts

Charts are also self-explanatory. You can make graphs and other representations of data
and results in this program, but we will not really address this here.
Layouts
A layout is ArcView’s term for graphic output. If you want to make a map that will
appear in a publication, you would take your view and incorporate it into a layout. Again,
we will not concentrate on this aspect in these lessons.
Scripts
Scripts are programs that perform functions not already available through the various
tools and buttons that come with ArcView. You can use these scripts to customize
ArcView, or just perform some tasks that are not common enough to merit inclusion in
the basic ArcView interface. The programming language used in ArcView is known as
Avenue, and is object-oriented. We will learn how to use some scripts in a later lesson.
Some jargon associated with Views
When you open up a View, you will need something that can be mapped for display.
ArcView treats these maps as layers, known as Themes. You can add themes when your
. You will get a dialog
View window is active by clicking the Add Theme button
box that asks you where the file you want to add is. Select the folder that contains the file
you want and double click on that file. In the example below, we are adding a map of the
United States from the ESRI data included with ArcView.

As you can see, the files all have a .shp suffix. This denotes a shape file, ArcView’s
format for storing spatial data. When you add a Theme, you will notice that on the left
side of your graphic area in the View window, that file is now represented.

This area is known as the Table of Contents. You will work more with this feature in
other lessons.
Miscellaneous tips
You will notice that the theme name in the Table of Contents is inside a raised box. That
means that that theme is active, and therefore the one you can make changes to. You only
need to click on the theme name to activate it, or use Shift and click on multiple theme
names to activate more than one.
Note that the theme name is the same as the file name, in this case States.shp. If you
want to change this name to something more suitable to your current project, go to the
menu bar and choose Theme… Properties. In the dialog box, change your theme name to
whatever you would like in the Theme Name blank, and click OK. Remember, this will
not change the actual file name. This means you could use the same shape file in
multiple views, each with a different theme name.
Similarly, if you want your View window title to be more descriptive than “View 1”, go
to View… Properties. In the dialog box, change the name in the Name blank.
Summary
Shape files, when brought into use, become Themes. Themes are layers in a View, and
different Views, Tables, etc., are stored in Projects. Hopefully, this will help you keep
everything straight when you work through the following lessons.
Important: When you save a Project, the names of Views, Themes, Scripts, etc. are only
pointers to the actual files in your system. This means that if you move any of the
original shape files, dBase files, etc., the Project will no longer know where to find them.

