 Ruby Tipsheet:

Types:

* Comments: `#comments`
* Null: `nil`
* Booleans: `true`, `false`
* Integers, Floats, hex, binary, etc: `123`, `1.23e‐4`, `0xFF00`, `0b01100`
* Ranges, inclusive or non-inclusive: `[0..5]` or `[0...5]`
* String, Interpolated String: `'String'`, `"Interpolated #{curseword} String"`
* Regular Expressions: `/regex/`
* Arrays: `sample = ['array','of',4,'things']`
* Hash (associative array): `Thing = {1 => 2, :symbol =>'string', :lang => 'Ruby'}`
* Symbols: `:symbol`
* TypeErrors: when trying to change types or assign wrong type
* Assignment (Declaring Variables): Local `i`, Instance `@i`, Class `@@i`, Global `$i`, Constant `CONST`

Conditionals (Logic Evaluation):

* equals, does not equal: `==`, `!=`
* greater-than, less-than, etc: `>=`, `>`, `<`, `<=`
* ‘and’ condition: `&&` or `AND`
* ‘or’ condition: `||` or `OR`
* inline!: ternary `<%= "Name: #{Thing[:lang]}" unless Thing[:lang].empty? %>`
* if/else, unless, switch statements: `if x == y ... else ... end`, `unless x == y ... else ... end`, `case n ... when 0 ... when 1 ... else ... end`

Iteration (Looping):

* puts: `puts 'hello'`
* while, until, do, for: `while i < 100 do ... end`, `for x in [1, 2, 3] do ... end`
* inline block iteration (e.g. .each): `[1, 2, 3].each{ |x| puts x }`
* break, continue: `break`; `next`

Enumerables (Arrays & Objects):

* Ruby does C.R.U.D. patterns: Create, Read, Update, Delete
* Frequently Used Methods: `.present?`, `.nil?`, `.empty?`
* Functions, Modules and Classes: functions, modules, classes.

Gems:

* Packages of common components and community tools
* Commonly used Gems: Model-View-Controller patterns, Views, Model, Controller.

This tipsheet covers basic programming concepts and reminders specifically for Ruby. It explains types, such as comments, nil, booleans, integers, ranges, strings, regular expressions, arrays, hashes, symbols and type errors, as well as how to change types through coercion. Conditionals are covered, including equals, greater than, and, or, inline if and switch statements. Looping and iteration is discussed through puts, while, until, do, for, and each. Ruby has its own set of enumerables and frequently used methods for arrays and objects, which are also explained. The tipsheet concludes by covering functions, modules, and classes, as well as popular gems.
